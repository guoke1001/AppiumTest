{
  "uid" : "5ef069659d0b76e",
  "name" : "test_pre",
  "fullName" : "test_case.test_pre.Test_Pre#test_pre",
  "historyId" : "49d8fed7b40e9f1853bc3f2d377a4fdc",
  "time" : {
    "start" : 1592260251262,
    "stop" : 1592260312249,
    "duration" : 60987
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18b50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18550>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18d50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18c50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_pre.Test_Pre object at 0x10feea110>\ncommon_driver = <appium.webdriver.webdriver.WebDriver (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\n\n    @allure.story(\"长按\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_pre(self,common_driver):\n        xueqiu=XueQiuPage(common_driver)\n>       text=xueqiu.goto_hq().press().select(0)\n\ntest_case/test_pre.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/HANGQING/hang_qing_page.py:18: in press\n    el=self.find_element(self._product)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:39: in find_element\n    raise e\ncommon/base_page.py:32: in find_element\n    return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18cd0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "cmdopt",
    "time" : {
      "start" : 1592260230318,
      "stop" : 1592260230318,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "common_driver",
    "time" : {
      "start" : 1592260230318,
      "stop" : 1592260251258,
      "duration" : 20940
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18b50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18550>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18d50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <page.HANGQING.hang_qing_page.Hang_Qing_Page object at 0x10fe68190>\nlocator = ('xpath', \"//*[contains(@text,'贵州茅台')]\")\n\n    def find_element(self, locator) -> WebElement:\n        #todo: 处理弹框 异常处理 动态浮动的元素的处理\n        try:\n>           return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n\ncommon/base_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18c50>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_pre.Test_Pre object at 0x10feea110>\ncommon_driver = <appium.webdriver.webdriver.WebDriver (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\n\n    @allure.story(\"长按\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_pre(self,common_driver):\n        xueqiu=XueQiuPage(common_driver)\n>       text=xueqiu.goto_hq().press().select(0)\n\ntest_case/test_pre.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/HANGQING/hang_qing_page.py:18: in press\n    el=self.find_element(self._product)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:46: in find_element\n    return self.find_element(locator)\ncommon/base_page.py:39: in find_element\n    raise e\ncommon/base_page.py:32: in find_element\n    return WebDriverWait(self.driver,10,0.2).until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0dd8931-022c-4a6a-ab50-785e9a7930ca\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10ff18cd0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7475820a48436cdc",
      "name" : "log",
      "source" : "7475820a48436cdc.txt",
      "type" : "text/plain",
      "size" : 427
    }, {
      "uid" : "aaca65ca099cb5ce",
      "name" : "stderr",
      "source" : "aaca65ca099cb5ce.txt",
      "type" : "text/plain",
      "size" : 428
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "common_driver::0",
    "time" : {
      "start" : 1592260312383,
      "stop" : 1592260313666,
      "duration" : 1283
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "长按"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "测试长按"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_pre"
  }, {
    "name" : "subSuite",
    "value" : "Test_Pre"
  }, {
    "name" : "host",
    "value" : "192.168.0.105"
  }, {
    "name" : "thread",
    "value" : "94150-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_pre"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "156b36e5a38b65ed",
      "status" : "passed",
      "time" : {
        "start" : 1592260250222,
        "stop" : 1592260262726,
        "duration" : 12504
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5ef069659d0b76e.json",
  "parameterValues" : [ ]
}